---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Verbosity Options
debug: False

stestr_executable: "{{ _stestr_executable | default('stestr') }}"

# Install openstack tempest
# set the tempest_install_method to source or distro
# on choosing source it will install from git or venv
# on choosing distro it will install based on distribution
refstack_install_method: "source"

# Set the package install state for distribution and pip packages
# # Options are 'present' and 'latest'
refstack_package_state: "latest"
refstack_pip_package_state: "latest"

# Set the host which will execute the shade modules
# for the service setup. The host must already have
# clouds.yaml properly configured.
refstack_service_setup_host: "{{ openstack_service_setup_host | default('localhost') }}"
refstack_service_setup_host_python_interpreter: "{{ openstack_service_setup_host_python_interpreter | default((tempest_service_setup_host == 'localhost') | ternary(ansible_playbook_python, ansible_python['executable'])) }}"

# Toggle whether tempest actually executes
refstack_run: no

# We comment `refstack_git_repo` so that the repo_build role does not attempt to
# build the wheel from this repo/branch. Instead, we want tempest to get built
# from the stable release defined in global requirements.
#refstack_git_repo: https://git.openstack.org/openstack/refstack
refstack_git_install_branch: master
refstack_developer_mode: False
refstack_developer_constraints:
  - "git+{{ refstack_git_repo }}@{{ refstack_git_install_branch }}#egg=refstack"

# TODO(odyssey4me):
# This can be simplified once all the roles are using
# python_venv_build. We can then switch to using a
# set of constraints in pip.conf inside the venv,
# perhaps prepared by giving a giving a list of
# constraints to the role.
refstack_pip_install_args: >-
  {{ refstack_developer_mode | ternary(pip_install_developer_constraints | default('--constraint /opt/developer-pip-constraints.txt'), '') }}
  {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''), '') }}
  {{ pip_install_options | default('') }}

# Name of the virtual env to deploy into
refstack_venv_tag: "{{ venv_tag | default('untagged') }}"
refstack_venv_bin: "/openstack/venvs/refstack-{{ refstack_venv_tag }}/bin"
# venv_download, even when true, will use the fallback method of building the
# venv from scratch if the venv download fails.
refstack_venv_download: "{{ not refstack_developer_mode | bool }}"
refstack_venv_download_url: http://127.0.0.1/venvs/untagged/ubuntu/refstack.tgz

# The location where the tempest logs will be placed
refstack_log_dir: "/var/log/refstack"

refstack_main_group: refstack_all

refstack_pip_packages:
  - os-testr
  - refstack

# This variable is used by the repo_build process to determine
# which host group to check for members of before building the
# pip packages required by this role. The value is picked up
# by the py_pkgs lookup.
refstack_role_project_group: utility_all

## Tunable overrides
refstack_refstack_conf_overrides: {}
